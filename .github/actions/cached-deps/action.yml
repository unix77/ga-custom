name: "Get & cache dependancies"
description: "Get and cache dependencies for the project via npm"
# we can add inputs to our custo mactions
inputs:
  caching:
    description: "Enable/disable caching of dependencies"
    # is this input a must to provide?
    required: false
    default: "true"
# we can also add outputs to our custom actions
outputs:
  used-cache:
    description: "Was the cache used?"
    # this output will be set to true if the cache was used
    value: ${{ steps.install.outputs.cache }}
runs:
  # here we specify to github that this is a composite action
  using: "composite"
  steps:
    - name: Cache dependencies
      # here we will check if the input is defined
      if: inputs.caching == 'true'
      id: cache
      # you can use other actions in your actions
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching == 'true'
      run:
        # we can use here several commands to be executed
        |
        npm ci
        echo "cache='${{inputs.caching}}'" >> $GITHUB_OUTPUT
      # at the action yml we need to specify what shell will be used to execute commands
      # such as the command above (npm ci)
      shell: bash
